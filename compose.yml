services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
      - ./config/homeassistant.yaml:/config/configuration.yaml
    restart: unless-stopped
    privileged: true
    network_mode: host

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883" #default mqtt port
      - "9001:9001" #default mqtt port for websockets
    volumes:
      - mosquitto_config:/mosquitto/config:rw
      - mosquitto_data:/mosquitto/data:rw
      - mosquitto_log:/mosquitto/log:rw
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped

  zigbee2mqtt:
      container_name: zigbee2mqtt
      image: ghcr.io/koenkk/zigbee2mqtt
      restart: unless-stopped
      volumes:
          - zigbee2mqtt:/app/data
          - /run/udev:/run/udev:ro
      ports:
          # Frontend port
          - 8081:8080
      environment:
          - TZ=Europe/Berlin
      devices:
          # Make sure this matched your adapter location
          - /dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20230804194557-if00:/dev/ttyACM0

  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - URL=${DOMAIN}
      - SUBDOMAINS=wildcard
      - VALIDATION=dns
      - DNSPLUGIN=hetzner
      - EMAIL=${EMAIL}
      - HETZNER_API_TOKEN
    volumes:
      - swag:/config
      - ./config/site-confs:/config/nginx/site-confs
      - ./config/index.html.template:/config/www/index.html.template
      - ./config/90_swag_envsub.sh:/custom-cont-init.d/90_envsub.sh
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp" # DNS
      - "53:53/udp" # DNS
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8080:80/tcp" # Dashboard
    environment:
      TZ: 'Europe/Berlin'
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      FTLCONF_webserver_api_password: ${PIHOLE_PASSWORD}
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: 'all'
    # Volumes store your data between container upgrades
    volumes:
      - pihole:/etc/pihole
      - dnsmasq:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  hetzner-ddns:
    container_name: hetzner-ddns
    build:
      context: hetzner-api-dyndns-docker
      network: host
    environment:
      HETZNER_AUTH_API_TOKEN: ${HETZNER_API_TOKEN}
      HETZNER_ZONE_NAME: ${DOMAIN}
      HETZNER_RECORD_NAME: '@'
      HETZNER_RECORD_TTL: '60'
      HETZNER_RECORD_TYPE: AAAA
    restart: unless-stopped
    network_mode: host

  web-logbook:
    container_name: web-logbook
    image: vsimakhin/web-logbook:latest
    command: -dsn /data/web-logbook.sql
    restart: unless-stopped
    user: root
    ports:
      - 4000:4000
    volumes:
      - web-logbook:/data

  backup:
    container_name: backup
    image: offen/docker-volume-backup:latest
    restart: unless-stopped
    volumes:
      - homeassistant:/backup/homeassistant:ro
      - swag:/backup/swag:ro
      - pihole:/backup/pihole:ro
      - dnsmasq:/backup/dnsmasq:ro
      - web-logbook:/backup/web-logbook:ro
      - zigbee2mqtt:/backup/zigbee2mqtt:ro
      - mosquitto_config:/backup/mosquitto_config:ro
      - mosquitto_data:/backup/mosquitto_data:ro
      - mosquitto_log:/backup/mosquitto_log:ro
    environment:
      BACKUP_CRON_EXPRESSION: "0 4 * * MON"
      AWS_S3_BUCKET_NAME: ${AWS_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_ENDPOINT: ${AWS_ENDPOINT}

volumes:
  homeassistant:
  swag:
  pihole:
  dnsmasq:
  web-logbook:
  zigbee2mqtt:
  mosquitto_config:
  mosquitto_data:
  mosquitto_log:
